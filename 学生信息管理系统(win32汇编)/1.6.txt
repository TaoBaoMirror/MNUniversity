.586
.model flat,stdcall
option casemap:none
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;需要的头文件
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
include 		 windows.inc
include 		 user32.inc
include 		 kernel32.inc
include          Comdlg32.inc
includelib   	 user32.lib
includelib 	 kernel32.lib
includelib      Comdlg32.lib;装入通用对话框库

;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;学生结构体的定义
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
BIRTHDAY STRUCT
		 YEAR DWORD 2 dup(?)
		 MONTH DWORD ?
		 DAY DWORD ?
BIRTHDAY ENDS
SCORCE STRUCT
		 ENGLISH DWORD ?
		 CLANGUAGE DWORD ?
		 MATH DWORD ?
		 TOTAL DWORD ?
SCORCE ENDS
STUDENT STRUCT
		 ID DWORD 2 dup(?)
		 SNAME dword 3 dup(?)
		 BIRTH BIRTHDAY <>
		 SEXY DWORD ?
		 SCOR SCORCE <>
STUDENT ENDS
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;资源的定义
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
DLG_MAIN EQU 1H
ICO_MAIN EQU 1300H
IDST_STATE EQU 1014H
IDED_STUID EQU 1100H
IDED_NAME EQU 1101H
IDED_SEXY EQU 1102H
IDED_YEAR EQU 1103H
IDED_MONTH EQU 1104H
IDED_DAY EQU 1105H
IDED_ENGLISH EQU 1106H
IDED_CLANGUAGE EQU 1107H
IDED_MATH EQU 1108H
IDED_TOTAL EQU 1109H
IDED_OUTTEXT EQU 110AH
IDBU_READ EQU 1200H
IDBU_SAVE EQU 1201H
IDBU_NAMEPLUSORDER EQU 1202H
IDBU_TOTALPLUSORDER EQU 1203H
IDBU_IDFIND EQU 1204H
IDBU_NAMEFIND EQU 1205H
IDBU_AVERAGE EQU 1206H
IDBU_EVERYNUMBER EQU 1207H
IDBU_SHOWINFORMATION EQU 1208H
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;必要变量的定义
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
MAX_STUDENTNUMBER EQU 30;定义最大学生人数
.data?
STU STUDENT MAX_STUDENTNUMBER dup(<>);STUDENT结构体数组
hInstance dd ?;模块实例句柄
hWinMain dd ?;主窗口句柄
hIcon dd ?;图标句柄
hFile dd ?;打开的文件句柄
SizeStructStudent dd ?;STUDENT结构体的大小
IStructCount dd ?;第几个结构体
TotalStudentNumber dd ?;学生总人数统计
STRUCTReadFileName OPENFILENAME <>;
TotalPathFileName db MAX_PATH DUP(?);全路径文件名字
FileContainBuffer db 8000 dup(?);从硬盘打开的文件内容缓冲到的地方
HaveBufferByte dd ?;从硬盘打开的文件内容给FileContainBuffer的字节数
ToTextBuffer db 8000 dup(?);转换好的文件准备放到硬盘的缓冲区

.data
SexMan db '男',0
SexWoman db '女',0
FileCharacter db '文本文件（*.txt）',0,'*.txt',0,'所有文件（*.*）',0,'*.*',0,0
NoFileHandle db '打开文件句柄失败！',0
ReadToFlieContainBufferFalse db '读取文件到内存缓冲区失败！',0
ReadToFileContainBufferTrue db '读取文件内存缓冲区成功！',0
CaptionSucceed db '恭喜哟：',0
CaptionError db '出错啦！',0
SucceedRead db '文本文件已成功存储到结构体数组！',0
FormatToD db '%u',0

.code
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;加载界面时完成一系列初始化工作
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
_InitialWork proc
pushad
		 		 mov TotalStudentNumber,0
		 		 mov SizeStructStudent,sizeof STUDENT
		 		 invoke LoadIcon,hInstance,ICO_MAIN
		 		 mov hIcon,eax
		 		 invoke SendMessage,hWinMain,WM_SETICON,ICON_BIG,eax
		 		 invoke SendDlgItemMessage,hWinMain,IDED_SEXY,CB_ADDSTRING,NULL,ADDR SexMan;初始化组合框
		 		 invoke SendDlgItemMessage,hWinMain,IDED_SEXY,CB_ADDSTRING,NULL,ADDR SexWoman
		 		 invoke SendDlgItemMessage,hWinMain,IDED_STUID,EM_LIMITTEXT,8,0;以下分别限定字符串长度
		 		 invoke SendDlgItemMessage,hWinMain,IDED_NAME,EM_LIMITTEXT,8,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_YEAR,EM_LIMITTEXT,4,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_MONTH,EM_LIMITTEXT,2,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_DAY,EM_LIMITTEXT,2,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_ENGLISH,EM_LIMITTEXT,3,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_CLANGUAGE,EM_LIMITTEXT,3,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_MATH,EM_LIMITTEXT,3,0
		 		 invoke SendDlgItemMessage,hWinMain,IDED_TOTAL,EM_LIMITTEXT,3,0
popad
		 		 ret
_InitialWork endp
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;把用户输入的UI界面的数据保存到结构体数组
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
_SaveToArrayFromUI proc @IStructCount
pushad
		 lea ebx,STU
		 mov edx,0
		 mov eax,@IStructCount
		 mul SizeStructStudent
		 add ebx,eax
		 assume ebx :ptr STUDENT
		 invoke GetDlgItemText,hWinMain,IDED_STUID,addr [ebx].ID,4;获取id号赋值
		 invoke GetDlgItemText,hWinMain,IDED_NAME,addr [ebx].SNAME,4
		 invoke	SendDlgItemMessage,hWinMain,IDED_SEXY,CB_GETCURSEL,0,0
		 .if eax==0
		 		 invoke lstrcpy,addr [ebx].SEXY,addr SexMan
		 .else
		 		 invoke lstrcpy,addr [ebx].SEXY,addr SexWoman
		 .endif
		 invoke GetDlgItemText,hWinMain,IDED_YEAR,addr [ebx].BIRTH.YEAR,8
		 invoke GetDlgItemText,hWinMain,IDED_MONTH,addr [ebx].BIRTH.MONTH,4
		 invoke GetDlgItemText,hWinMain,IDED_DAY,ADDR [ebx].BIRTH.DAY,4
		 invoke GetDlgItemText,hWinMain,IDED_ENGLISH,ADDR [ebx].SCOR.ENGLISH,4
		 invoke GetDlgItemText,hWinMain,IDED_CLANGUAGE,ADDR [ebx].SCOR.CLANGUAGE,4
		 invoke GetDlgItemText,hWinMain,IDED_MATH,ADDR [ebx].SCOR.MATH,4
		 invoke GetDlgItemText,hWinMain,IDED_TOTAL,ADDR [ebx].SCOR.TOTAL,4
		 assume ebx:nothing
popad
ret
_SaveToArrayFromUI endp
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;把缓冲区中的数据保存到结构体数组
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
__SaveToArrayFromFileContainBuffer proc
		 local @HaveBufferByte:dword;FileContainBuffer缓冲区的总偏移量
		 local @Flags:dword;作为存取到结构体的标记，=1就存到年，=4就存到数学成绩		 local @Buffer[2]:dword
pushad
		 invoke RtlZeroMemory,addr STU,sizeof STU
		 lea ebx,FileContainBuffer;
		 lea esi,STU
		 assume esi:ptr STUDENT
		 push HaveBufferByte
		 pop @HaveBufferByte;
		 mov @Flags,0
		 .while @HaveBufferByte
		 		 invoke RtlZeroMemory,addr @Buffer,sizeof @Buffer
		 		 lea edi,@Buffer
		 		 mov ax,[ebx]
		 		 mov ah,0
		 		 .break .if al==NULL
		 		 .if al<= 57 && al >= 48;处理数字
		 		 		 mov [edi],al
		 		 		 inc edi
		 		 		 .while TRUE
		 		 		 		 inc ebx
		 		 		 		 dec @HaveBufferByte
		 		 		 		 mov al,[ebx]
		 		 		 		 .break .if al==32||al==13||al==10||al==NULL;当数字后有空格换行符或回车或者文件到了最后时跳出
		 		 		 		 mov [edi],al
		 		 		 		 inc edi
		 		 		 .endw
		 		 		 .if @Flags==0
		 		 		 		 invoke lstrcpy,addr [esi].ID,addr @Buffer
		 		 		 .elseif @Flags==1
		 		 		 		 invoke lstrcpy,addr [esi].BIRTH.YEAR,addr @Buffer
		 		 		 .elseif @Flags==2
		 		 		 		 invoke lstrcpy,addr [esi].BIRTH.MONTH,addr @Buffer
		 		 		 .elseif @Flags==3
		 		 		 		 invoke lstrcpy,addr [esi].BIRTH.DAY,addr @Buffer
		 		 		 .elseif @Flags==4
		 		 		 		 invoke lstrcpy,addr [esi].SCOR.ENGLISH,addr @Buffer
		 		 		 .elseif @Flags==5
		 		 		 		 invoke lstrcpy,addr [esi].SCOR.CLANGUAGE,addr @Buffer
		 		 		 .elseif @Flags==6		 		 		 		 invoke lstrcpy,addr [esi].SCOR.MATH,addr @Buffer
		 		 		 .elseif @Flags==7
		 		 		 		 invoke lstrcpy,addr [esi].SCOR.TOTAL,addr @Buffer
		 		 		 .endif
		 		 		 inc @Flags
		 		 .elseif al>=65 && al<=90 || al>=97 && al <=122;大写和小写字母的处理
		 		 		 mov [edi],al
		 		 		 inc edi
		 		 		 .while TRUE;送到本地缓冲区做进一步处理
		 		 		 		 inc ebx
		 		 		 		 dec @HaveBufferByte
		 		 		 		 mov al,[ebx]
		 		 		 		 .break .if al==32
		 		 		 		 mov [edi],al
		 		 		 		 inc edi
		 		 		 .endw
		 		 		 invoke lstrcpy,addr [esi].SNAME,addr @Buffer
		 		 .elseif al==13||al==10;||al ==32;回车换行空格不处理
		 		 		 add esi,SizeStructStudent;本行处理结束，跳到下一行处理
		 		 		 mov @Flags,0
		 		 		 inc TotalStudentNumber;学生总人数加1
		 		 .elseif al>=0A0h && al <= 0FEh;处理汉字
		 		 		 mov [edi],al
		 		 		 inc edi
		 		 		 .while TRUE;传送到本地缓冲区做进一步处理
		 		 		 		 inc ebx
		 		 		 		 dec @HaveBufferByte
		 		 		 		 mov al,[ebx]
		 		 		 		 .break .if al==32
		 		 		 		 mov [edi],al
		 		 		 		 inc edi
		 		 		 .endw
		 		 		 mov eax,[edi]
		 		 		 .if eax=='男' || eax== '女';当字符是男女时分别对应存储到结构体
		 		 		 		 invoke lstrcpy,addr [esi].SEXY,ADDR @Buffer
		 		 		 .else
		 		 		 		 invoke lstrcpy,addr [esi].SNAME,ADDR @Buffer
		 		 		 .endif
		 		 .endif
		 		 dec @HaveBufferByte
		 		 inc ebx;处理下一个缓冲区字节
		 .endw
		 lea esi,STU
		 invoke MessageBox,NULL,addr [esi].ID,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SNAME,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SEXY,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].BIRTH.YEAR,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].BIRTH.MONTH,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].BIRTH.DAY,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SCOR.ENGLISH,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SCOR.CLANGUAGE,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SCOR.MATH,NULL,MB_OK
		 invoke MessageBox,NULL,addr [esi].SCOR.TOTAL,NULL,MB_OK
popad
ret
__SaveToArrayFromFileContainBuffer endp
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;从硬盘加载TEXT文件对应加载到缓冲区并且调用子程序把缓冲区数据保存到结构体数组
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
_LoadFile proc
pushad
		 invoke RtlZeroMemory,addr STRUCTReadFileName,sizeof STRUCTReadFileName;初始化READFILILENAME
		 mov STRUCTReadFileName.lStructSize,sizeof STRUCTReadFileName;指定结构体长度
		 push hWinMain
		 pop STRUCTReadFileName.hWndOwner;指定文件所属主窗口
		 mov STRUCTReadFileName.lpstrFilter,offset FileCharacter;设置文件特征
		 mov STRUCTReadFileName.lpstrFile,offset TotalPathFileName;设置全路径文件缓冲区
		 mov STRUCTReadFileName.nMaxFile,sizeof TotalPathFileName;设置文件的全路径缓冲区长度
		 mov STRUCTReadFileName.Flags,OFN_FILEMUSTEXIST or OFN_PATHMUSTEXIST;设定用户只能打开已经存在的文件
		 invoke GetOpenFileName,offset STRUCTReadFileName;打开文件通用对话框
		 invoke CreateFile,addr TotalPathFileName,GENERIC_READ,FILE_SHARE_READ,NULL,OPEN_EXISTING,FILE_ATTRIBUTE_NORMAL,NULL
		 .if eax==INVALID_HANDLE_VALUE;判断返回的句柄看有没有获取正确打开文件指针
		 		 invoke MessageBox,hWinMain,addr NoFileHandle,addr CaptionError,MB_OK OR MB_ICONWARNING
		 .else;成功打开
		 		 mov hFile,eax
		 		 invoke ReadFile,hFile,addr FileContainBuffer,sizeof FileContainBuffer,addr HaveBufferByte,NULL;读取文件到内存缓冲区
		 		 .if eax==0
		 		 		 invoke MessageBox,hWinMain,addr ReadToFlieContainBufferFalse,addr CaptionError,MB_OK OR MB_ICONWARNING;读取时出现错误
		 		 .else;读取正确的处理
		 		 		 invoke __SaveToArrayFromFileContainBuffer;把缓冲区中的档案保存到数组
		 		 .endif
		 .endif
popad
ret
_LoadFile endp
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
;把所有结构体中的数据保存到硬盘TEXT文件
;》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》
_SaveToFileFromStruct proc
		 local @TotalStudentNumber:dword;学生总人数
		 local @SpaceBuffer:byte;空格ASCII字符
		 local @EnterBuffer1:byte;回车ASCII字符
		 local @EnterBuffer2:byte;换行ASCII字符
pushad
		 invoke RtlZeroMemory,addr ToTextBuffer,sizeof ToTextBuffer
		 push TotalStudentNumber
		 pop @TotalStudentNumber
		 mov @SpaceBuffer,32
		 mov @EnterBuffer1,0ah
		 mov @EnterBuffer2,0dh
		 lea ebx,STU
		 assume ebx:ptr STUDENT
		 .while @TotalStudentNumber>0
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].ID
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SNAME
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SEXY
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].BIRTH.YEAR
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].BIRTH.MONTH
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].BIRTH.DAY
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SCOR.ENGLISH
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SCOR.CLANGUAGE
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SCOR.MATH
		 		 invoke lstrcpy,addr ToTextBuffer,addr @SpaceBuffer
		 		 invoke lstrcpy,addr ToTextBuffer,[ebx].SCOR.TOTAL
		 		 invoke lstrcpy,addr ToTextBuffer,addr @EnterBuffer1
		 		 invoke lstrcpy,addr ToTextBuffer,addr @EnterBuffer2
		 		 add ebx,SizeStructStudent;指向下一组结构体
		 		 dec @TotalStudentNumber
		 .endw
popad
ret
_SaveToFileFromStruct endp

_ProcDlgMain proc uses ebx esi edi hWnd,wMsg,wParam,lParam
		 mov eax,hWnd
		 mov hWinMain,eax
		 mov eax,wMsg
		 .if eax==WM_CLOSE
		 		 invoke EndDialog,hWnd,NULL
		 .elseif eax==WM_INITDIALOG
		 		 invoke _InitialWork
		 .elseif eax==WM_COMMAND
		 		 mov eax,wParam
		 		 .if ax<=IDED_OUTTEXT && ax>=IDED_STUID
		 		 		 mov eax,TRUE
		 		 		 ret
		 		 .elseif ax==IDOK
		 		 		 invoke _SaveToArrayFromUI,IStructCount
		 		 		 inc IStructCount;指向下一个结构体
		 		 		 inc TotalStudentNumber;学生总人数加1
		 		 ;		 invoke _SaveToArray,ICount
		 		 ;		 inc ICount
		 		 .elseif ax==IDCANCEL
		 		 		 ;invoke _SaveToArray,ICount
		 		 		 ;inc ICount
		 		 		 invoke EndDialog,hWnd,NULL;按下ESC将会退出
		 		 .elseif ax==IDBU_READ
		 		 		 invoke _LoadFile;装载文件
		 		 .elseif ax==IDBU_SAVE
		 				 invoke _SaveToFileFromStruct
		 				 invoke MessageBox,NULL,addr ToTextBuffer,NULL,MB_OK
		 		 ;invoke MessageBox,NULL,addr A,NULL,MB_OK
		 		 .elseif ax==IDBU_NAMEPLUSORDER
		 		 ;invoke MessageBox,NULL,addr B,NULL,MB_OK
		 		 .elseif ax==IDBU_TOTALPLUSORDER
		 		 ;invoke MessageBox,NULL,addr Ce,NULL,MB_OK
		 		 .elseif ax==IDBU_IDFIND
		 		 ;invoke MessageBox,NULL,addr D,NULL,MB_OK
		 		 .elseif ax==IDBU_NAMEFIND
		 		 ;invoke MessageBox,NULL,addr E,NULL,MB_OK
		 		 .elseif ax==IDBU_AVERAGE
		 		 ;invoke MessageBox,NULL,addr F,NULL,MB_OK
		 		 .elseif ax==IDBU_EVERYNUMBER
		 		 ;invoke MessageBox,NULL,addr G,NULL,MB_OK
		 		 .elseif ax==IDBU_SHOWINFORMATION
		 		 ;invoke MessageBox,NULL,addr H,NULL,MB_OK
		 		 .endif
		 .else
		 		 mov eax,FALSE
		 		 ret
		 .endif
		 
		 mov eax,TRUE
		 ret
_ProcDlgMain endp


START:
		 invoke GetModuleHandle,NULL
		 mov hInstance,eax
		 invoke DialogBoxParam,hInstance,DLG_MAIN,NULL,addr _ProcDlgMain,NULL
		 invoke ExitProcess,NULL
END START